name: OnPushNewVersion

on:
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:

      - name: Install jq and 7zip
        run: |
          sudo apt-get install jq
          sudo apt-get install p7zip-full

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout recaster
        uses: actions/checkout@v2
        with:
          repository: impleotv/recaster
          token: ${{ secrets.RECASTER_REPO_TOKEN }}
          path: ./recaster       

      - name: Download and Extract ffmpeg for win
        run: |
          wget https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full.7z
          7z x ffmpeg-release-full.7z -o./ffmpeg-tmp

      - name: List files in the repository
        run: |
          tree ${{ github.workspace }}

      - name: Copy ffprobe win
        run: |
          mkdir -p ./recaster/ffmpeg/win
          cp ./ffmpeg-tmp/ffmpeg-6.1.1-full_build/bin/ffprobe.exe ./recaster/ffmpeg/win/

      - name: Delete ffmpeg-release-full.7z and ffmpeg-tmp directory
        run: |
          rm ffmpeg-release-full.7z
          rm -rf ./ffmpeg-tmp

      - name: Download and Extract ffmpeg Linux
        run: |
          wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
          mkdir -p ffmpeg-linux-tmp
          tar -xf ffmpeg-release-amd64-static.tar.xz -C ffmpeg-linux-tmp --strip-components=1

      - name: Copy ffprobe linux
        run: |
          mkdir -p ./recaster/ffmpeg/linux-x64
          cp ./ffmpeg-linux-tmp/ffprobe ./recaster/ffmpeg/linux-x64/

      - name: Delete ffmpeg-release-amd64-static.tar.xz and ffmpeg-linux-tmp directory
        run: |
          rm ffmpeg-release-amd64-static.tar.xz
          rm -rf ./ffmpeg-linux-tmp
   
      - name: List files in the repository
        run: |
          tree ${{ github.workspace }}

      - name: Setup NodeJs 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      
      - name: Install dependencies
        run: npm install

      # - name: Cache dependencies and build outputs to improve workflow execution time.
      #   uses: actions/cache@v3
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-js-${{ hashFiles('package-lock.json') }}
  
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install mkdocs dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs
          pip install mkdocs-macros-plugin

      - name: Install dependencies
        run: cd ./recaster && npm install

      - name: Build Recaster
        run: cd ./recaster && npm run build

      - name: Sleep for 4 seconds, just in case...
        run: sleep 4s
        shell: bash

      - name: List files in the repository
        run: |
          tree -L 2 ${{ github.workspace }}

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Check version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}   

      - name: Generate README file
        run: node index.js ${{env.RELEASE_VERSION }}

      - name: List files in the repository
        run: |
          tree -L 2 ${{ github.workspace }}

      - name: Create release 
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body: |
            Recaster release
            - tar, 7z archives

      - name: Upload tar artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./recaster/recaster-install.tar.gz
          asset_name: recaster-install.tar.gz
          asset_content_type: application/gzip

      - name: Upload zip artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./recaster/recaster-install.7z
          asset_name: recaster-install.7z
          asset_content_type: application/x-7z-compressed

      - name: Upload README.md
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/markdown 

      - name: Upload CHANGELOG.md
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./recaster/CHANGELOG.md
          asset_name: CHANGELOG.md
          asset_content_type: text/markdown 

      - name: Upload RecasterVdd.docx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./recaster/RecasterVdd.docx
          asset_name: RecasterVdd.docx
          asset_content_type: application/vnd.openxmlformats-officedocument.wordprocessingml.document

      - name: Zip docker related files
        run: zip -r docker.zip docker-compose.yml .env

      - name: Upload docker.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: docker.zip
          asset_name: docker.zip
          asset_content_type: application/zip

      # - name: Upload ATP
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./recaster/ATP/ATP.docx
      #     asset_name: ATP.docx
      #     asset_content_type: application/vnd.openxmlformats-officedocument.wordprocessingml.document

      - name: Add README, CHANGELOG, ATP abd vdd
        run: |
          git add README.md
          cp ./recaster/CHANGELOG.md ./
          cp ./recaster/ATP/ATP.docx ./
          cp ./recaster/RecasterVdd.docx ./
          git add CHANGELOG.md
          git add ATP.docx
          git add RecasterVdd.docx

      - name: Commit Changes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -m "README and CHANGELOG" -a

      - name: Push Changes
        run: |
          git push origin HEAD:master
              
      - name: Clean up
        run: |
         rm -rf ./recaster

